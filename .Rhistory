library(dplyr)
head(starwars)
data(starwars)
head(starwars)
## select: subset column ##
select(starwars,name,height)
## select: subset column ##
select(starwars,name,height,films)
## select: subset column ##
select(starwars,name,height,mass,homeworld)
## select: subset column ##
select(starwars,name,height,mass,species,homeworld)
## filter: subset rows by condition ##
filter(starwars,species=="Droid")
select(starwars,name:homeworld)
filter(starwars,species=="Human",mass < 100)
filter(starwars,species=="Human" | mass < 100)
## mutate: create a new column
mutate(starwars,height_by_mass = height / mass)
## group_by:
group_by(starwars,gender)
?group_by
unique(starwars$gender)
## summarize: create stats from group data
summarize(starwars,group_by(starwars,gender),mean_mass = mean(mass))
## summarize: create stats from group data
summarize(starwars,group_by(gender),mean_mass = mean(mass))
## summarize: create stats from group data
summarize(group_by(starwars,gender),mean_mass = mean(mass))
View(starwars)
## summarize: create stats from group data
summarize(group_by(starwars,gender),mean_mass = mean(mass,na.remove=T))
## summarize: create stats from group data
summarize(group_by(starwars,gender),mean_mass = mean(mass,na.rm=T))
summarize(group_by(starwars,gender),mean_height = mean(height,na.rm=T))
## arrange: sort columns
arrange(starwars,mass)
arrange(starwars,desc(mass))
## count: count discrete values
count(starwars,sex)
## pipes: the usual way to use dplyr --> dataframe %>% operation1 %>% operation 2 .....
starwars %>% select(height > 100)
## pipes: the usual way to use dplyr --> dataframe %>% operation1 %>% operation 2 .....
starwars %>% select(height)
## pipes: the usual way to use dplyr --> dataframe %>% operation1 %>% operation 2 .....
starwars %>% select(name,height)
starwars %>% group_by(gender) %>% summarise(mean_mas=mean(mass,na.rm=T))
starwars %>% select(name:species)
starwars %>% select(name:species) %>% filter(species != "Human")
##### dplyr #####
library(dplyr)
data(starwars)
head(starwars)
## select: subset column ##
select(starwars,name,height,mass,species,homeworld)
select(starwars,name:homeworld)
## filter: subset rows by condition ##
filter(starwars,species=="Droid")
filter(starwars,species=="Human",mass < 100)
filter(starwars,species=="Human" | mass < 100)
## mutate: create a new column
mutate(starwars,height_by_mass = height / mass)
## group_by: group data
group_by(starwars,gender)
## summarize: create stats from group data
summarize(group_by(starwars,gender),mean_mass = mean(mass,na.rm=T))
summarize(group_by(starwars,gender),mean_height = mean(height,na.rm=T))
## arrange: sort columns
arrange(starwars,mass)
arrange(starwars,desc(mass))
## count: count discrete values
count(starwars,sex)
## pipes: the usual way to use dplyr --> dataframe %>% operation1 %>% operation 2 .....
starwars %>% select(name,height)
starwars %>% group_by(gender) %>% summarise(mean_mas=mean(mass,na.rm=T))
starwars %>% select(name:species) %>% filter(species != "Human")
starwars %>% select(name:species) %>% filter(species != "Human") %>% group_by(sex)
starwars %>% select(name:species) %>% filter(species != "Human") %>% group_by(sex) %>% summarize(max(height))
starwars %>% select(name:species) %>% filter(species != "Human") %>% group_by(sex) %>% summarize(max_height = max(height))
starwars %>% select(name:species) %>% filter(species != "Human") %>% group_by(sex) %>% summarize(max_height = max(height,na.rm=T))
## Reshaping DataFrame
data("Titanic")
head(Titanic)
Titanic
Titanic
## Reshaping DataFrame
data("ToothGrowth")
head(ToothGrowth)
## Reshaping DataFrame
data(mpg)
## Reshaping DataFrame
head(mpg)
## Reshaping DataFrame
head(USArrests)
## join: join two datasets
df1 = data.frame(ID = c(1, 2, 3, 4, 5),
w = c('a', 'b', 'c', 'd', 'e'),
x = c(1, 1, 0, 0, 1),
y=rnorm(5),
z=letters[1:5])
df2 = data.frame(ID = c(1, 7, 3, 6, 8),
a = c('z', 'b', 'k', 'd', 'l'),
b = c(1, 2, 3, 0, 4),
c =rnorm(5),
d =letters[2:6])
inner_join(df1, df2, by = "ID")
library(dplyr)
head(band_instruments)
head(band_members)
band_members %>% inner_join(band_instruments)
superheroes <- tibble::tribble(
~name, ~alignment,  ~gender,          ~publisher,
"Magneto",      "bad",   "male",            "Marvel",
"Storm",     "good", "female",            "Marvel",
"Mystique",      "bad", "female",            "Marvel",
"Batman",     "good",   "male",                "DC",
"Joker",      "bad",   "male",                "DC",
"Catwoman",      "bad", "female",                "DC",
"Hellboy",     "good",   "male", "Dark Horse Comics"
)
publishers <- tibble::tribble(
~publisher, ~yr_founded,
"DC",       1934L,
"Marvel",       1939L,
"Image",       1992L
)
View(superheroes)
superheroes = data.frame(name = c("Magneto","Storm","Mystique","Batman","Joker","Catwoman","Hellboy"),
alignment = c("bad","good","bad","good","bad","bad","good"))
superheroes = data.frame(name = c("Magneto","Storm","Mystique","Batman","Joker","Catwoman","Hellboy"),
alignment = c("bad","good","bad","good","bad","bad","good"),
gender = c("male","female","female","male","male","female","male"),
publisher = c("Marvel","Marvel","Marvel","DC","DC","DC","Dark Horse Comics"))
publishers = data.frame(publisher = c("DC","Marvel","Image"),
year_founded = c(1934,1939,1992))
inner_join(superheroes,publishers)
inner_join(superheroes,publishers,by="publisher")
## Left join: prioritizes left table
left_join(superheroes,publishers,by="publisher")
left_join(publishers,superheroes,by="publisher")
## Right join: prioritizes right table
left_join(superheroes,publishers,by="publisher")
right_join(publishers,superheroes,by="publisher")
## Full join: retains all rows
full_join(superheroes,publishers,by="publisher")
superheroes %>% inner_join(publishers,by="publisher")
## Left join: prioritizes left table
superheroes %>% left_join(publishers,by="publisher")
## Right join: prioritizes right table
publishers %>% right_join(superheroes,by="publisher")
## Full join: retains all rows
superheroes %>% full_join(publishers,by="publisher")
superheroes %>% inner_join(publishers,by="publisher") %>% filter(alignment == "good")
superheroes %>% semi_join(publishers,by="publisher")
superheroes %>% inner_join(publishers,by="publisher")
superheroes %>% semi_join(publishers,by="publisher")
## Semi join: match in both tables but do not add the information from the second table
superheroes %>% inner_join(publishers,by="publisher")
superheroes %>% semi_join(publishers,by="publisher")
## anti_join
superheroes %>% anti_join(publishers,by="publisher")
superheroes %>% inner_join(publishers,by="publisher") %>% filter(alignment == "good")
library(incidence)
install.packages("EpiEstim")
